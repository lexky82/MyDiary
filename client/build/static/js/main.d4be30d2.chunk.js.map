{"version":3,"sources":["layouts/Sidebar/styles.tsx","layouts/Sidebar/index.tsx","layouts/App/styles.ts","layouts/Navbar/index.tsx","layouts/App/index.tsx","serviceWorkerRegistration.ts","index.tsx","components/Notification/index.tsx","utils/fetcher.ts"],"names":["Nav","styled","nav","Ul","ul","Li","li","withRouter","history","data","useSWR","fetcher","useEffect","isAuth","push","to","PieChartOutlined","style","width","CalendarOutlined","EnvironmentOutlined","PlusOutlined","CoverSidebar","div","useStyles","makeStyles","theme","createStyles","grow","flexGrow","zIndex","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","searchText","setSearchText","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","axios","get","then","response","success","openNotification","catch","err","toString","mobileMenuId","renderMobileMenu","IconButton","aria-label","aria-controls","aria-haspopup","className","AppBar","background","Toolbar","InputBase","placeholder","root","input","inputProps","value","onChange","e","onKeyPress","key","edge","LogIn","loadable","SignUp","Calendar","MapView","Diary","ViewDiary","Mainpage","UpdateDiary","SearchPage","App","exact","path","component","Navbar","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","description","code","notification","message","icon","placement","url","withCredentials"],"mappings":"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","file":"static/js/main.d4be30d2.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Nav = styled.nav`\r\n  width: 5rem;\r\n  position: fixed;\r\n  height: 100vh;\r\n  z-index: 100;\r\n  background-color: #202020;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 9%;\r\n  }\r\n`;\r\n\r\nexport const Ul = styled.ul`\r\n  list-style-type: none;\r\n  color: white;\r\n  &:first-child {\r\n    padding-top: 1.5rem;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n  }\r\n`;\r\n\r\nexport const Li = styled.li`\r\n  padding-bottom: 4rem;\r\n\r\n  & > a{\r\n    color : skyblue;\r\n  }\r\n\r\n  &:hover a:after {\r\n    opacity: 5;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    padding-bottom: 2rem;\r\n  }\r\n\r\n  svg {\r\n    width: 1.7rem;\r\n    height: 1.4rem;\r\n    position: relative;\r\n    left: -1.563rem;\r\n    cursor: pointer;\r\n\r\n    @media screen and(min-width:768px) {\r\n      width: 1.5rem;\r\n      height: 1.4rem;\r\n      left: -15px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, RouteChildrenProps, withRouter } from \"react-router-dom\";\r\nimport { Li, Nav, Ul } from \"./styles\";\r\nimport {\r\n  PieChartOutlined,\r\n  CalendarOutlined,\r\n  PlusOutlined,\r\n  EnvironmentOutlined,\r\n} from \"@ant-design/icons\";\r\nimport useSWR from \"swr\";\r\nimport fetcher from \"../../utils/fetcher\";\r\n\r\nconst Sidebar = ({ history }: RouteChildrenProps) => {\r\n  const { data } = useSWR(\"/api/users/auth\", fetcher);\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    if (!data.isAuth) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Nav>\r\n      <Ul>\r\n        <Li>\r\n          <Link to=\"/\">\r\n            <PieChartOutlined style={{ width: \"100%\" }} />\r\n          </Link>\r\n        </Li>\r\n\r\n        <Li>\r\n          <Link to=\"/calendar\">\r\n            <CalendarOutlined style={{ width: \"100%\" }} />\r\n          </Link>\r\n        </Li>\r\n\r\n        <Li>\r\n          <Link to=\"/mapview\">\r\n            <EnvironmentOutlined style={{ width: \"100%\" }} />\r\n          </Link>\r\n        </Li>\r\n\r\n        <Li>\r\n          <Link to=\"/diary\">\r\n            <PlusOutlined style={{ width: \"100%\" }} />\r\n          </Link>\r\n        </Li>\r\n      </Ul>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default withRouter(Sidebar);\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const CoverSidebar = styled.div`\r\n  padding-left: 5rem;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    padding-left: 0px;\r\n    padding-bottom: 4.688rem;\r\n  }\r\n`;\r\n","import React, { KeyboardEvent } from \"react\";\r\nimport {\r\n  alpha,\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport axios from \"axios\";\r\nimport openNotification from \"../../components/Notification\";\r\nimport { RouteChildrenProps, withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n      zIndex: 101,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"block\",\r\n      },\r\n    },\r\n    search: {\r\n      position: \"relative\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n      \"&:hover\": {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: \"auto\",\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: \"100%\",\r\n      position: \"absolute\",\r\n      pointerEvents: \"none\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    inputRoot: {\r\n      color: \"inherit\",\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        display: \"flex\",\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: \"flex\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ntype props = RouteChildrenProps;\r\n\r\nfunction PrimarySearchAppBar({ history }: props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n  const [searchText, setSearchText] = React.useState(\"\");\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const logoutHandler = () => {\r\n    axios\r\n      .get(`/api/users/logout`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          openNotification(\r\n            \"로그아웃 성공\",\r\n            \"로그아웃을 정상적으로 수행하였습니다.\",\r\n            true\r\n          );\r\n          history.push(\"/login\");\r\n        } else {\r\n          openNotification(\r\n            \"로그아웃 실패\",\r\n            \"로그아웃을 정상적으로 수행하지 못했습니다\",\r\n            false\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        openNotification(\"로그아웃 실패\", err.toString(), false);\r\n      });\r\n  };\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const searchKeyHandler = (e: KeyboardEvent<HTMLImageElement>) => {\r\n    if (e.key === \"Enter\") {\r\n      history.push(`/search/${searchText}`);\r\n    }\r\n  };\r\n\r\n  const searchChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.currentTarget.value);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={logoutHandler}>로그아웃</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ background: \"#63738E\", paddingLeft: \"64px\" }}\r\n      >\r\n        <Toolbar>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"일기 검색\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              value={searchText}\r\n              onChange={searchChangeHandler}\r\n              onKeyPress={searchKeyHandler}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(PrimarySearchAppBar);\r\n","import React from \"react\";\r\nimport loadable from \"@loadable/component\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport { CoverSidebar } from \"./styles\";\r\nimport Navbar from \"../Navbar\";\r\n\r\nconst LogIn = loadable(() => import(\"../../pages/LogIn\"));\r\nconst SignUp = loadable(() => import(\"../../pages/SignUp\"));\r\nconst Calendar = loadable(() => import(\"../../pages/Calendar\"));\r\nconst MapView = loadable(() => import(\"../../pages/MapView\"));\r\nconst Diary = loadable(() => import(\"../../pages/Diary\"));\r\nconst ViewDiary = loadable(() => import(\"../../pages/ViewDiary\"));\r\nconst Mainpage = loadable(() => import(\"../../pages/Mainpage\"));\r\nconst UpdateDiary = loadable(() => import(\"../../pages/UpdateDiary\"));\r\nconst SearchPage = loadable(() => import(\"../../pages/SearchPage\"));\r\n\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/login\" component={LogIn} />\r\n      <Route exact path=\"/signup\" component={SignUp} />\r\n      <div>\r\n        <Sidebar />\r\n        <Navbar />\r\n        <CoverSidebar>\r\n          <Route exact path=\"/\" component={Mainpage} />\r\n          <Route exact path=\"/calendar\" component={Calendar} />\r\n          <Route exact path=\"/diary\" component={Diary} />\r\n          <Route exact path=\"/mapview\" component={MapView} />\r\n          <Route exact path=\"/viewdiary/:diaryid\" component={ViewDiary} />\r\n          <Route exact path=\"/updatediary/:diaryid\" component={UpdateDiary} />\r\n          <Route exact path=\"/search/:searchtext\" component={SearchPage} />\r\n        </CoverSidebar>\r\n      </div>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './layouts/App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport \"antd/dist/antd.css\";\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();","import { notification } from \"antd\";\r\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\r\n\r\nconst openNotification = (title: string ,description: string, code: boolean) => {\r\n    if (code === true) {\r\n      notification.open({\r\n        message: title,\r\n        description: description,\r\n\r\n        icon: <CheckOutlined style={{ color: \"green\" }} />,\r\n        placement: \"topLeft\",\r\n      });\r\n    }\r\n    if (code === false) {\r\n      notification.open({\r\n        message: title,\r\n        description: description,\r\n\r\n        icon: <CloseOutlined style={{ color: \"red\" }} />,\r\n        placement: \"topLeft\",\r\n      });\r\n    }\r\n  };\r\n\r\nexport default openNotification","import axios from 'axios';\r\n\r\nconst fetcher = (url: string) =>\r\n  axios\r\n    .get(url, {\r\n      withCredentials: true,\r\n    })\r\n    .then((response) => response.data);\r\n\r\nexport default fetcher;"],"sourceRoot":""}